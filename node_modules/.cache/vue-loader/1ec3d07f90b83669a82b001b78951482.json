{"remainingRequest":"C:\\Users\\Anisha Maharjan\\Desktop\\chat app\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Anisha Maharjan\\Desktop\\chat app\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Anisha Maharjan\\Desktop\\chat app\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anisha Maharjan\\Desktop\\chat app\\frontend\\src\\components\\HelloWorld.vue?vue&type=template&id=469af010&scoped=true&","dependencies":[{"path":"C:\\Users\\Anisha Maharjan\\Desktop\\chat app\\frontend\\src\\components\\HelloWorld.vue","mtime":1611572780504},{"path":"C:\\Users\\Anisha Maharjan\\Desktop\\chat app\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anisha Maharjan\\Desktop\\chat app\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Anisha Maharjan\\Desktop\\chat app\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anisha Maharjan\\Desktop\\chat app\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}